// <auto-generated />
using System;
using BGT_Web_Boardgame.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BGT_Web_Boardgame.Migrations
{
    [DbContext(typeof(BoardgameDbContext))]
    [Migration("20250810145924_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BGT_Web_Boardgame.Models.Models.BoardgameModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Diff")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("integer");

                    b.Property<int>("MinPlayers")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("SoloWinner")
                        .HasColumnType("boolean");

                    b.Property<bool>("Teamplay")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Boardgames");
                });

            modelBuilder.Entity("BGT_Web_Boardgame.Models.Models.BoardgameOwnerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<int>("BoardgameId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsLoaned")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("OwnerDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("BoardgameId");

                    b.HasIndex("AccountId", "BoardgameId")
                        .IsUnique();

                    b.ToTable("BoardgameOwners");
                });

            modelBuilder.Entity("BGT_Web_Boardgame.Models.Models.BoardgameOwnerModel", b =>
                {
                    b.HasOne("BGT_Web_Boardgame.Models.Models.BoardgameModel", "Boardgame")
                        .WithMany()
                        .HasForeignKey("BoardgameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boardgame");
                });
#pragma warning restore 612, 618
        }
    }
}
